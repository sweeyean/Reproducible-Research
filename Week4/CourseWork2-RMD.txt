#Reproducible Research: Peer assessment 2

#Impact of Storms and other severe weather events on Public Health and Economy in the United States

Synonpsis
In this report, we aim to analyze the impact of Storms and different weather events on public health and economy based on the U.S. National Oceanic and Atmospheric Administration's (NOAA) storm database. This database tracks characteristics of major storms and weather events in the United States, including when and where they occur, as well as estimates of any fatalities, injuries, and property damage. 
The database covers the time period between 1950 and November 2011. In the earlier years of the database there are generally fewer events recorded, most likely due to a lack of good records. More recent years should be considered more complete.

###1. Load required libraries
```{r}
library(R.utils)
library(ggplot2)
library(plyr)
require(gridExtra)
```

###2. Data Processing 
###2.1 Code for reading in the dataset and/or processing the data
```{r}
setwd("C:/Data Science/05. Reproducible Research")
```

a. set the filename
```{r}
	Zip_file <- "repdata%2Fdata%2FStormData.csv.bz2"
	filename <- "repdata%2Fdata%2FStormData.csv"
```

b. Make sure data folder exists. Else create the folder named "Data"
```{r}
	if(!file.exists("Data")) { 
	   dir.create("Data")
	   }
```	   

```{r}	   
setwd("C:/Data Science/05. Reproducible Research/Data")
```
   
c. Download the dataset:
```{r}
	if (!file.exists(Zip_file)){
	  fileURL <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
	  download.file(fileURL, Zip_file, mode="wb")
	}  
```

d. unzip the dataset:
```{r}
	if (!file.exists(filename)) {
	  unzip(Zip_file) 
	}
```
	 
e. reading in the dataset
```{r}
	storm_CSV <- read.csv("repdata%2Fdata%2FStormData.csv", sep = ',')
```	
f. sample of the dataset
```{r}
	head(storm_CSV)
```

###2.2 Extracting the required data
Since this analysis focuses only on the public health and economic consequences of severe weather events, therefore a subset of the database is needed.
```{r}
event <- c("EVTYPE", "FATALITIES", "INJURIES", "PROPDMG", "PROPDMGEXP","CROPDMG", "CROPDMGEXP")
		
storm <- storm_CSV[event]
```

###2.3 Finding property damage
Property damage exponents for each level was listed out and assigned those values for the property exponent data. Invalid data was excluded by assigning the value as ‘0’. Then property damage value was calculated by multiplying the property damage and property exponent value. The code for this process was listed below
	
Finding the property damage exponent and levels
```{r}	
unique(storm$PROPDMGEXP)
```
		
Assigning values for the property exponent data 
```{r}
storm$PROPEXP[storm$PROPDMGEXP == "K"] <- 1000
storm$PROPEXP[storm$PROPDMGEXP == "M"] <- 1e+06
storm$PROPEXP[storm$PROPDMGEXP == ""] <- 1
storm$PROPEXP[storm$PROPDMGEXP == "B"] <- 1e+09
storm$PROPEXP[storm$PROPDMGEXP == "m"] <- 1e+06
storm$PROPEXP[storm$PROPDMGEXP == "0"] <- 1
storm$PROPEXP[storm$PROPDMGEXP == "5"] <- 1e+05
storm$PROPEXP[storm$PROPDMGEXP == "6"] <- 1e+06
storm$PROPEXP[storm$PROPDMGEXP == "4"] <- 10000
storm$PROPEXP[storm$PROPDMGEXP == "2"] <- 100
storm$PROPEXP[storm$PROPDMGEXP == "3"] <- 1000
storm$PROPEXP[storm$PROPDMGEXP == "h"] <- 100
storm$PROPEXP[storm$PROPDMGEXP == "7"] <- 1e+07
storm$PROPEXP[storm$PROPDMGEXP == "H"] <- 100
storm$PROPEXP[storm$PROPDMGEXP == "1"] <- 10
storm$PROPEXP[storm$PROPDMGEXP == "8"] <- 1e+08
```

Assigning '0' to invalid exponent data
```{r}
storm$PROPEXP[storm$PROPDMGEXP == "+"] <- 0
storm$PROPEXP[storm$PROPDMGEXP == "-"] <- 0
storm$PROPEXP[storm$PROPDMGEXP == "?"] <- 0
```

# Calculating the property damage value
```{r}
storm$PROPDMGVAL <- storm$PROPDMG * storm$PROPEXP
```
 
###2.4 Finding crop damage
Crop damage exponents for each level was listed out and assigned those values for the crop exponent data. Invalid data was excluded by assigning the value as ‘0’. Then crop damage value was calculated by multiplying the crop damage and crop exponent value. The code for this process was listed below

#Finding the crop damage exponent and levels
```{r}
unique(storm$CROPDMGEXP)
```

# Assigning values for the crop exponent data 
```{r}
storm$CROPEXP[storm$CROPDMGEXP == "M"] <- 1e+06
storm$CROPEXP[storm$CROPDMGEXP == "K"] <- 1000
storm$CROPEXP[storm$CROPDMGEXP == "m"] <- 1e+06
storm$CROPEXP[storm$CROPDMGEXP == "B"] <- 1e+09
storm$CROPEXP[storm$CROPDMGEXP == "0"] <- 1
storm$CROPEXP[storm$CROPDMGEXP == "k"] <- 1000
storm$CROPEXP[storm$CROPDMGEXP == "2"] <- 100
storm$CROPEXP[storm$CROPDMGEXP == ""] <- 1
```

# Assigning '0' to invalid exponent data
```{r}
storm$CROPEXP[storm$CROPDMGEXP == "?"] <- 0
```

# calculating the crop damage value
```{r}
storm$CROPDMGVAL <- storm$CROPDMG * storm$CROPEXP	
```

###2.5 Finding totals of each incident by event type.
It was observed that "The most harmful to population health" events are fatalities and injuries. So, only those events with fatalities and injuries were selecetd.

It was observed that "The most harmful to econamic problem“” events are Property and crop damages. So, only those events with property and crop damage were selecetd.

Each incident (Fatalities,Injuries, Property damage and Crop damage), the total values were estimated. Code for which is as follows.

```{r}
fatal <- aggregate(FATALITIES ~ EVTYPE, storm, FUN = sum)
injury <- aggregate(INJURIES ~ EVTYPE, storm, FUN = sum)
propdmg <- aggregate(PROPDMGVAL ~ EVTYPE, storm, FUN = sum)
cropdmg <- aggregate(CROPDMGVAL ~ EVTYPE, storm, FUN = sum)
```

###2.6 Plotting events with highest fatalities and highest injuries.
Highest fatalities and highest injuries for Top 10 events were calculated. For better understanding and comparision these values were plotted as follows.

# Listing Top 10 events with highest fatalities
```{r}
fatal10 <- fatal[order(-fatal$FATALITIES), ][1:10, ]
```

# Listing Top 10 events with highest injuries
```{r}
injury10 <- injury[order(-injury$INJURIES), ][1:10, ]

par(mfrow = c(1, 2), mar = c(12, 4, 3, 2), mgp = c(3, 1, 0), cex = 0.8)
barplot(fatal10$FATALITIES, las = 3, names.arg = fatal10$EVTYPE, main = "Total Fatalities by Severe Weather\n Events in the U.S.\n from 1995 - 2011", ylab = "Number of fatalities", col = "light blue")
barplot(injury10$INJURIES, las = 3, names.arg = injury10$EVTYPE, main = "Total Injuries by Severe Weather\n Events in the U.S.\n from 1995 - 2011", ylab = "Number of injuries", col = "light blue")	
```

###2.7 Plotting events with highest Property damage and highest crop damage.
Highest Property damage and highest crop damage for Top 10 events were calculated. For better understanding and comparision these values were plotted as follows.

# Finding Top 10 events with highest property damage
```{r}
propdmg10 <- propdmg[order(-propdmg$PROPDMGVAL), ][1:10, ]
```

# Finding Top 10 events with highest crop damage
```{r}
cropdmg10 <- cropdmg[order(-cropdmg$CROPDMGVAL), ][1:10, ]

par(mfrow = c(1, 2), mar = c(12, 4, 3, 2), mgp = c(3, 1, 0), cex = 0.8)
barplot(propdmg10$PROPDMGVAL/(10^9), las = 3, names.arg = propdmg10$EVTYPE, main = "Total Property Damage by\n Severe Weather Events in\n the U.S. from 1995 - 2011", ylab = "Damage Cost ($ billions)",  col = "lightblue")
barplot(cropdmg10$CROPDMGVAL/(10^9), las = 3, names.arg = cropdmg10$EVTYPE, main = "Total Crop Damage by \nSevere Weather Events in\n the U.S. from 1995 - 2011", ylab = "Damage Cost ($ billions)", col = "lightblue")

###3. Results Summary
Based on the data, Tornados caused the maximum number of fatalities and injuries. It was followed by Excessive Heat for fatalities and Thunderstorm wind for injuries.

Floods caused the maximum property damage; Drought caused the maximum crop damage.  Hurricanes/Typhoos caused the second maximum property damage; and Floods caused second maximum crop damage.		